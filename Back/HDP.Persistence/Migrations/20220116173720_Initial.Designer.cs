// <auto-generated />
using System;
using HDP.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HDP.Persistence.Migrations
{
    [DbContext(typeof(HDPContext))]
    [Migration("20220116173720_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HDP.Domain.Models.Caminhao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlacaCaminhao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TipoCaminhaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoCaminhaoId");

                    b.ToTable("Caminhoes");
                });

            modelBuilder.Entity("HDP.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeNormalizado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("HDP.Domain.Models.Constantes.AdicionaisVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AdicionaisVendas");
                });

            modelBuilder.Entity("HDP.Domain.Models.Constantes.TipoCaminhao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposCaminhoes");
                });

            modelBuilder.Entity("HDP.Domain.Models.Constantes.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposPagamentos");
                });

            modelBuilder.Entity("HDP.Domain.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<Guid>("TipoCaminhaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TipoCaminhaoId");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("HDP.Domain.Models.Venda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("AdicionaisVendaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CaminhaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TipoPagamentoId")
                        .HasColumnType("uuid");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AdicionaisVendaId");

                    b.HasIndex("CaminhaoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("TipoPagamentoId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("HDP.Domain.Models.Caminhao", b =>
                {
                    b.HasOne("HDP.Domain.Models.Cliente", "Cliente")
                        .WithMany("Caminhoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HDP.Domain.Models.Constantes.TipoCaminhao", "TipoCaminhao")
                        .WithMany("Caminhoes")
                        .HasForeignKey("TipoCaminhaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoCaminhao");
                });

            modelBuilder.Entity("HDP.Domain.Models.Material", b =>
                {
                    b.HasOne("HDP.Domain.Models.Constantes.TipoCaminhao", "TipoCaminhao")
                        .WithMany("Materiais")
                        .HasForeignKey("TipoCaminhaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCaminhao");
                });

            modelBuilder.Entity("HDP.Domain.Models.Venda", b =>
                {
                    b.HasOne("HDP.Domain.Models.Constantes.AdicionaisVenda", "AdicionaisVenda")
                        .WithMany("Vendas")
                        .HasForeignKey("AdicionaisVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HDP.Domain.Models.Caminhao", "Caminhao")
                        .WithMany("Vendas")
                        .HasForeignKey("CaminhaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HDP.Domain.Models.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HDP.Domain.Models.Material", "Material")
                        .WithMany("Vendas")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HDP.Domain.Models.Constantes.TipoPagamento", "TipoPagamento")
                        .WithMany("Vendas")
                        .HasForeignKey("TipoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdicionaisVenda");

                    b.Navigation("Caminhao");

                    b.Navigation("Cliente");

                    b.Navigation("Material");

                    b.Navigation("TipoPagamento");
                });

            modelBuilder.Entity("HDP.Domain.Models.Caminhao", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("HDP.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Caminhoes");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("HDP.Domain.Models.Constantes.AdicionaisVenda", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("HDP.Domain.Models.Constantes.TipoCaminhao", b =>
                {
                    b.Navigation("Caminhoes");

                    b.Navigation("Materiais");
                });

            modelBuilder.Entity("HDP.Domain.Models.Constantes.TipoPagamento", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("HDP.Domain.Models.Material", b =>
                {
                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using HDP.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HDP.Persistence.Migrations
{
    [DbContext(typeof(HDPContext))]
    [Migration("20241010152231_SenhaAtivo")]
    partial class SenhaAtivo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CuidadosEspeciaisItem", b =>
                {
                    b.Property<Guid>("Cuidadosespeciaisid")
                        .HasColumnType("uuid")
                        .HasColumnName("cuidadosespeciaisid");

                    b.Property<Guid>("Itemid")
                        .HasColumnType("uuid")
                        .HasColumnName("itemid");

                    b.HasKey("Cuidadosespeciaisid", "Itemid")
                        .HasName("pk_cuidadosespeciaisitem");

                    b.HasIndex("Itemid");

                    b.ToTable("CuidadosEspeciaisItem", (string)null);
                });

            modelBuilder.Entity("DietaItem", b =>
                {
                    b.Property<Guid>("Dietaid")
                        .HasColumnType("uuid")
                        .HasColumnName("dietaid");

                    b.Property<Guid>("Itemid")
                        .HasColumnType("uuid")
                        .HasColumnName("itemid");

                    b.HasKey("Dietaid", "Itemid")
                        .HasName("pk_dietaitem");

                    b.HasIndex("Itemid");

                    b.ToTable("DietaItem", (string)null);
                });

            modelBuilder.Entity("HDP.Domain.Models.CuidadosEspeciais", b =>
                {
                    b.Property<Guid>("Cuidadosespeciaisid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("cuidadosespeciaisid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Descricaousomedicamento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricaousomedicamento");

                    b.Property<int>("Porcoespordia")
                        .HasColumnType("integer")
                        .HasColumnName("porcoespordia");

                    b.Property<int>("Valorporcao")
                        .HasColumnType("integer")
                        .HasColumnName("valorporcao");

                    b.HasKey("Cuidadosespeciaisid")
                        .HasName("CuidadosEspeciais_pkey");

                    b.ToTable("CuidadosEspeciais");
                });

            modelBuilder.Entity("HDP.Domain.Models.Dieta", b =>
                {
                    b.Property<Guid>("Dietaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("dietaid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Hospedagemid")
                        .HasColumnType("uuid")
                        .HasColumnName("hospedagemid");

                    b.Property<decimal>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("Dietaid")
                        .HasName("Dieta_pkey");

                    b.HasIndex("Hospedagemid");

                    b.ToTable("Dieta");
                });

            modelBuilder.Entity("HDP.Domain.Models.Hospedagem", b =>
                {
                    b.Property<Guid>("Hospedagemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("hospedagemid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("Datacheckin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datacheckin");

                    b.Property<DateTime?>("Datacheckout")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datacheckout");

                    b.Property<DateTime?>("Datafim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datafim");

                    b.Property<DateTime>("Datainicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datainicio");

                    b.Property<bool>("Paga")
                        .HasColumnType("boolean")
                        .HasColumnName("paga");

                    b.Property<Guid>("Petid")
                        .HasColumnType("uuid")
                        .HasColumnName("petid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("status");

                    b.Property<Guid>("Usuarioid")
                        .HasColumnType("uuid")
                        .HasColumnName("usuarioid");

                    b.HasKey("Hospedagemid");

                    b.HasIndex("Petid");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Hospedagem", (string)null);
                });

            modelBuilder.Entity("HDP.Domain.Models.Item", b =>
                {
                    b.Property<Guid>("Itemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("itemid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tipo");

                    b.HasKey("Itemid");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("HDP.Domain.Models.Pet", b =>
                {
                    b.Property<Guid>("Petid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("petid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("Datanascimento")
                        .HasColumnType("date")
                        .HasColumnName("datanascimento");

                    b.Property<string>("Motivobloqueio")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("motivobloqueio");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<float>("Peso")
                        .HasColumnType("real")
                        .HasColumnName("peso");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sexo");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tipo");

                    b.Property<Guid>("Tutorid")
                        .HasColumnType("uuid")
                        .HasColumnName("tutorid");

                    b.HasKey("Petid");

                    b.HasIndex("Tutorid");

                    b.ToTable("Pet", (string)null);
                });

            modelBuilder.Entity("HDP.Domain.Models.Servico", b =>
                {
                    b.Property<Guid>("Servicoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("servicoid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Hospedagemid")
                        .HasColumnType("uuid")
                        .HasColumnName("hospedagemid");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("preco");

                    b.HasKey("Servicoid");

                    b.HasIndex("Hospedagemid");

                    b.ToTable("Servico", (string)null);
                });

            modelBuilder.Entity("HDP.Domain.Models.Tutor", b =>
                {
                    b.Property<Guid>("Tutorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("tutorid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cep");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cpf");

                    b.Property<DateOnly?>("Datanascimento")
                        .HasColumnType("date")
                        .HasColumnName("datanascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<short?>("Numero")
                        .HasColumnType("smallint")
                        .HasColumnName("numero");

                    b.Property<string>("Rua")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("rua");

                    b.Property<string>("Telefone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("telefone");

                    b.HasKey("Tutorid");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("HDP.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("usuarioid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Admin")
                        .HasColumnType("boolean")
                        .HasColumnName("admin");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateOnly>("Datanascimento")
                        .HasColumnType("date")
                        .HasColumnName("datanascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Usuarioid");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("CuidadosEspeciaisItem", b =>
                {
                    b.HasOne("HDP.Domain.Models.CuidadosEspeciais", null)
                        .WithMany()
                        .HasForeignKey("Cuidadosespeciaisid")
                        .IsRequired()
                        .HasConstraintName("CuidadosEspeciaisItem_cuidadosespeciaisid_fkey");

                    b.HasOne("HDP.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("Itemid")
                        .IsRequired()
                        .HasConstraintName("CuidadosEspeciaisItem_itemid_fkey");
                });

            modelBuilder.Entity("DietaItem", b =>
                {
                    b.HasOne("HDP.Domain.Models.Dieta", null)
                        .WithMany()
                        .HasForeignKey("Dietaid")
                        .IsRequired()
                        .HasConstraintName("DietaItem_dietaid_fkey");

                    b.HasOne("HDP.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("Itemid")
                        .IsRequired()
                        .HasConstraintName("DietaItem_itemid_fkey");
                });

            modelBuilder.Entity("HDP.Domain.Models.Dieta", b =>
                {
                    b.HasOne("HDP.Domain.Models.Hospedagem", "Hospedagem")
                        .WithMany("Dietas")
                        .HasForeignKey("Hospedagemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_hospedagem");

                    b.Navigation("Hospedagem");
                });

            modelBuilder.Entity("HDP.Domain.Models.Hospedagem", b =>
                {
                    b.HasOne("HDP.Domain.Models.Pet", "Pet")
                        .WithMany("Hospedagens")
                        .HasForeignKey("Petid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pet");

                    b.HasOne("HDP.Domain.Models.Usuario", "Usuario")
                        .WithMany("Hospedagens")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuario");

                    b.Navigation("Pet");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HDP.Domain.Models.Pet", b =>
                {
                    b.HasOne("HDP.Domain.Models.Tutor", "Tutor")
                        .WithMany("Pets")
                        .HasForeignKey("Tutorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tutor");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("HDP.Domain.Models.Servico", b =>
                {
                    b.HasOne("HDP.Domain.Models.Hospedagem", "Hospedagem")
                        .WithMany("Servicos")
                        .HasForeignKey("Hospedagemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_hospedagem");

                    b.Navigation("Hospedagem");
                });

            modelBuilder.Entity("HDP.Domain.Models.Hospedagem", b =>
                {
                    b.Navigation("Dietas");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("HDP.Domain.Models.Pet", b =>
                {
                    b.Navigation("Hospedagens");
                });

            modelBuilder.Entity("HDP.Domain.Models.Tutor", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("HDP.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Hospedagens");
                });
#pragma warning restore 612, 618
        }
    }
}

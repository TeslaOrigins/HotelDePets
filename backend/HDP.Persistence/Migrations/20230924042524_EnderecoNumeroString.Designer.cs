// <auto-generated />
using System;
using HDP.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HDP.Persistence.Migrations
{
    [DbContext(typeof(HDPContext))]
    [Migration("20230924042524_EnderecoNumeroString")]
    partial class EnderecoNumeroString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HDP.Persistence.Alimento", b =>
                {
                    b.Property<int>("AlimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("alimentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("AlimentoId"));

                    b.Property<DateOnly>("DataEntrada")
                        .HasColumnType("date")
                        .HasColumnName("dataentrada");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<float>("PrecoReabastecimento")
                        .HasColumnType("real")
                        .HasColumnName("precoreabastecimento");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("integer")
                        .HasColumnName("quantidadeestoque");

                    b.HasKey("AlimentoId");

                    b.ToTable("Alimento", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.CuidadoEspecial", b =>
                {
                    b.Property<int>("CuidadoEspecialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cuidadoespecialid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("CuidadoEspecialId"));

                    b.Property<string>("Alergias")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("alergias");

                    b.Property<string>("CondicoesSaude")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("condicoessaude");

                    b.Property<int?>("HospedagemId")
                        .HasColumnType("integer")
                        .HasColumnName("hospedagemid");

                    b.Property<string>("InstrucoesEspeciais")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("instrucoesespeciais");

                    b.HasKey("CuidadoEspecialId");

                    b.HasIndex("HospedagemId");

                    b.ToTable("CuidadoEspecial", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.CuidadoEspecialMedicamento", b =>
                {
                    b.Property<int>("CemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cemid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("CemId"));

                    b.Property<int?>("CuidadoespecialId")
                        .HasColumnType("integer")
                        .HasColumnName("cuidadoespecialid");

                    b.Property<int?>("MedicamentoId")
                        .HasColumnType("integer")
                        .HasColumnName("medicamentoid");

                    b.HasKey("CemId")
                        .HasName("CuidadoEspecialMedicamento_pkey");

                    b.HasIndex("CuidadoespecialId");

                    b.HasIndex("MedicamentoId");

                    b.ToTable("CuidadoEspecialMedicamento", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Dieta", b =>
                {
                    b.Property<int>("DietaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dietaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("DietaId"));

                    b.Property<DateTime>("HorarioAlimentacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("horarioAlimentacao");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("observacoes");

                    b.Property<int>("PetId")
                        .HasColumnType("integer")
                        .HasColumnName("petid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("DietaId")
                        .HasName("Dieta_pkey");

                    b.HasIndex("PetId");

                    b.ToTable("Dieta");
                });

            modelBuilder.Entity("HDP.Persistence.DietaAlimento", b =>
                {
                    b.Property<int>("DietaId")
                        .HasColumnType("integer")
                        .HasColumnName("dietaid");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("integer")
                        .HasColumnName("alimentoid");

                    b.Property<int>("DietaAlimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dietaalimentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("DietaAlimentoId"));

                    b.HasKey("DietaId", "AlimentoId")
                        .HasName("pk_dietaalimento");

                    b.HasIndex("AlimentoId");

                    b.ToTable("DietaAlimento", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("enderecoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("EnderecoId"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cidade");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer")
                        .HasColumnName("tutorid");

                    b.HasKey("EnderecoId");

                    b.HasIndex("TutorId");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Hospedagem", b =>
                {
                    b.Property<int>("HospedagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hospedagemid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("HospedagemId"));

                    b.Property<bool?>("CheckIn")
                        .HasColumnType("boolean")
                        .HasColumnName("checkin");

                    b.Property<DateOnly?>("DataEntrada")
                        .HasColumnType("date")
                        .HasColumnName("dataentrada");

                    b.Property<DateOnly?>("DataSaida")
                        .HasColumnType("date")
                        .HasColumnName("datasaida");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("observacoes");

                    b.Property<int>("PetId")
                        .HasColumnType("integer")
                        .HasColumnName("petid");

                    b.Property<float>("PrecoHospedagem")
                        .HasColumnType("real")
                        .HasColumnName("precohospedagem");

                    b.HasKey("HospedagemId");

                    b.HasIndex("PetId");

                    b.ToTable("Hospedagem", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Medicamento", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("medicamentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("MedicamentoId"));

                    b.Property<DateOnly?>("DataEntrada")
                        .HasColumnType("date")
                        .HasColumnName("dataentrada");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<float?>("Preco")
                        .HasColumnType("real")
                        .HasColumnName("preco");

                    b.HasKey("MedicamentoId");

                    b.ToTable("Medicamento", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("petid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("PetId"));

                    b.Property<string>("Especie")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("especie");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fotourl");

                    b.Property<int?>("Idade")
                        .HasColumnType("integer")
                        .HasColumnName("idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<string>("NomeNormalizado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Peso")
                        .HasColumnType("real")
                        .HasColumnName("peso");

                    b.Property<string>("Raca")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("raca");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sexo");

                    b.Property<int?>("TutorId")
                        .HasColumnType("integer")
                        .HasColumnName("tutorid");

                    b.HasKey("PetId");

                    b.HasIndex("TutorId");

                    b.ToTable("Pet", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("reservaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ReservaId"));

                    b.Property<DateOnly?>("DataReserva")
                        .HasColumnType("date")
                        .HasColumnName("datareserva");

                    b.Property<int?>("HospedagemId")
                        .HasColumnType("integer")
                        .HasColumnName("hospedagemid");

                    b.HasKey("ReservaId");

                    b.HasIndex("HospedagemId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("servicoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ServicoId"));

                    b.Property<DateOnly?>("DataServico")
                        .HasColumnType("date")
                        .HasColumnName("dataservico");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<float?>("Preco")
                        .HasColumnType("real")
                        .HasColumnName("preco");

                    b.HasKey("ServicoId");

                    b.ToTable("Servico", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.ServicoHospedagem", b =>
                {
                    b.Property<int>("ServicoHospedagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("servicohospedagemid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ServicoHospedagemId"));

                    b.Property<int?>("HospedagemId")
                        .HasColumnType("integer")
                        .HasColumnName("hospedagemid");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("integer")
                        .HasColumnName("servicoid");

                    b.HasKey("ServicoHospedagemId");

                    b.HasIndex("HospedagemId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ServicoHospedagem", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Tutor", b =>
                {
                    b.Property<int>("TutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tutorid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("TutorId"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<string>("NomeNormalizado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nomenormalizado");

                    b.Property<string>("Telefone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("telefone");

                    b.HasKey("TutorId");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.Veterinario", b =>
                {
                    b.Property<int>("VeterinarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("veterinarioid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("VeterinarioId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<int?>("PetId")
                        .HasColumnType("integer")
                        .HasColumnName("petid");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("telefone");

                    b.HasKey("VeterinarioId");

                    b.HasIndex("PetId");

                    b.ToTable("Veterinario", (string)null);
                });

            modelBuilder.Entity("HDP.Persistence.CuidadoEspecial", b =>
                {
                    b.HasOne("HDP.Persistence.Hospedagem", "Hospedagem")
                        .WithMany("CuidadoEspecials")
                        .HasForeignKey("HospedagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_hospedagem");

                    b.Navigation("Hospedagem");
                });

            modelBuilder.Entity("HDP.Persistence.CuidadoEspecialMedicamento", b =>
                {
                    b.HasOne("HDP.Persistence.CuidadoEspecial", "Cuidadoespecial")
                        .WithMany("CuidadoEspecialMedicamentos")
                        .HasForeignKey("CuidadoespecialId")
                        .HasConstraintName("CuidadoEspecialMedicamento_cuidadoespecialid_fkey");

                    b.HasOne("HDP.Persistence.Medicamento", "Medicamento")
                        .WithMany("CuidadoEspecialMedicamentos")
                        .HasForeignKey("MedicamentoId")
                        .HasConstraintName("CuidadoEspecialMedicamento_MedicamentoId_fkey");

                    b.Navigation("Cuidadoespecial");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("HDP.Persistence.Dieta", b =>
                {
                    b.HasOne("HDP.Persistence.Pet", "Pet")
                        .WithMany("Dieta")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pet");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("HDP.Persistence.DietaAlimento", b =>
                {
                    b.HasOne("HDP.Persistence.Alimento", "Alimento")
                        .WithMany("DietaAlimentos")
                        .HasForeignKey("AlimentoId")
                        .IsRequired()
                        .HasConstraintName("DietaAlimento_AlimentoId_fkey");

                    b.HasOne("HDP.Persistence.Dieta", "Dieta")
                        .WithMany("DietaAlimentos")
                        .HasForeignKey("DietaId")
                        .IsRequired()
                        .HasConstraintName("DietaAlimento_DietaId_fkey");

                    b.Navigation("Alimento");

                    b.Navigation("Dieta");
                });

            modelBuilder.Entity("HDP.Persistence.Endereco", b =>
                {
                    b.HasOne("HDP.Persistence.Tutor", "Tutor")
                        .WithMany("Enderecos")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tutor");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("HDP.Persistence.Hospedagem", b =>
                {
                    b.HasOne("HDP.Persistence.Pet", "Pet")
                        .WithMany("Hospedagems")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pet");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("HDP.Persistence.Pet", b =>
                {
                    b.HasOne("HDP.Persistence.Tutor", "Tutor")
                        .WithMany("Pets")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_tutor");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("HDP.Persistence.Reserva", b =>
                {
                    b.HasOne("HDP.Persistence.Hospedagem", "Hospedagem")
                        .WithMany("Reservas")
                        .HasForeignKey("HospedagemId")
                        .HasConstraintName("Reserva_HospedagemId_fkey");

                    b.Navigation("Hospedagem");
                });

            modelBuilder.Entity("HDP.Persistence.ServicoHospedagem", b =>
                {
                    b.HasOne("HDP.Persistence.Hospedagem", "Hospedagem")
                        .WithMany("ServicoHospedagems")
                        .HasForeignKey("HospedagemId")
                        .HasConstraintName("ServicoHospedagem_HospedagemId_fkey");

                    b.HasOne("HDP.Persistence.Servico", "Servico")
                        .WithMany("ServicoHospedagems")
                        .HasForeignKey("ServicoId")
                        .HasConstraintName("ServicoHospedagem_ServicoId_fkey");

                    b.Navigation("Hospedagem");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("HDP.Persistence.Veterinario", b =>
                {
                    b.HasOne("HDP.Persistence.Pet", "Pet")
                        .WithMany("Veterinarios")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_pet");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("HDP.Persistence.Alimento", b =>
                {
                    b.Navigation("DietaAlimentos");
                });

            modelBuilder.Entity("HDP.Persistence.CuidadoEspecial", b =>
                {
                    b.Navigation("CuidadoEspecialMedicamentos");
                });

            modelBuilder.Entity("HDP.Persistence.Dieta", b =>
                {
                    b.Navigation("DietaAlimentos");
                });

            modelBuilder.Entity("HDP.Persistence.Hospedagem", b =>
                {
                    b.Navigation("CuidadoEspecials");

                    b.Navigation("Reservas");

                    b.Navigation("ServicoHospedagems");
                });

            modelBuilder.Entity("HDP.Persistence.Medicamento", b =>
                {
                    b.Navigation("CuidadoEspecialMedicamentos");
                });

            modelBuilder.Entity("HDP.Persistence.Pet", b =>
                {
                    b.Navigation("Dieta");

                    b.Navigation("Hospedagems");

                    b.Navigation("Veterinarios");
                });

            modelBuilder.Entity("HDP.Persistence.Servico", b =>
                {
                    b.Navigation("ServicoHospedagems");
                });

            modelBuilder.Entity("HDP.Persistence.Tutor", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
